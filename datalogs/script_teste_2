#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Aug 19 14:01:37 2019

@author: midas
"""

import pandas as pd

from sklearn.model_selection import train_test_split

from BaseEnginnering import BaseEnginnering

columns_name = ['target', 'lepton_1_pT', 'lepton_1_eta', 'lepton_1_phi', 'lepton_2_pT', 'lepton_2_eta', 
        'lepton_2_phi', 'missing_energy_magnitude', 'missing_energy_phi', 'MET_rel', 'axial_MET',
        'M_R', 'M_TR_2', 'R', 'MT2', 'S_R', 'M_Delta_R', 'dPhi_r_b', 'cos_theta_r1']

df_susy = pd.read_csv('SUSY.csv', names=[name.lower() for name in columns_name], engine='c')

print(">> Dataset carregado com sucesso")
print(">> Imprimindo cabecalho do dataset")
print( df_susy.head() )
print(">> Tamanho do dataset")
print(df_susy.shape)
print(">> Informações do dataset")
print(df_susy.info())
print(">> Inicia a separacao dos dados de treino e teste")

X=df_susy[[name.lower() for name in columns_name[1:]]]
y=df_susy['target']

# Split dataset into training set and test set
# 70% training and 30% test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=100, shuffle=True, stratify=y)

del df_susy

model = BaseEnginnering()
model.predict_X = X_test

for item in model.get_df_split(chunck=128):
    print(item)
