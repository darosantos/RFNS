History Review
COD		Title		DESCRIÇÃO
#d1001	Validação dos parâmetros de tipos de dados primitivo	Mudança na forma de selecionar um subconjunto do dataset, eliminando as cópias intermediárias pelo acesso direto ao dataframe
#d1002	Correção de bug na divisão do dataset
#d2001	
#d2002	
#d2003	Altera a classe EnginneringForest	Retorna a classe para trabalhar somente com um select_features
#d2004	Altera a classe EnginneringForest	Cria novos métodos; Otimiza o código para lidar com vetores
#d2005	Altera a classe EnginneringForest	Adiciona um destrutor a classe
#d2006	Altera a classe EnginneringForest	Adiciona o uso de __slots__
#d2007	Cria o script cache_compile			Adiciona o uso do py_compile para criar o cache bytecode das classes
#d2008	Altera a classe EnginneringForest	Adiciona a especificação do tipo de dados de entrada e retorno; Valida as entradas fornecidas pelo usuário
#d2009	Altera a classe EnginneringForest	Modifica o método build para que os estimators sejam gerados uma generator expressions
#d2010	Altera a classe EnginneringForest	Modifica o método fit para que os estimators sejam gerados uma generator expressions
#d2011	Altera a classe EnginneringForest	Cria o método classifier; Altera o método predict para usar generator expressions; Adiciona o atributo self.df_prefix_column_predict
#d2012	Altera a classe EnginneringForest	Correções de bugs em sintaxe
#d2013	Altera a classe EnginneringForest	Correções de bus em sintaxe; Exclusão de métodos; Alterações do código para funcionar corretamente
#derror  Perda do histórico de atualizações do repositório, o código do projeto teve de ser reescrito
#d4001   Atualizações da classe BaseEnginnering   Criação de atributos; Alteração nos métodos implementados
#d4002   Atualizações da classe BaseEnginnering   Add __slots__
#d4003   Atualizações da classe BaseEnginnering   Removido a restrição do tipo lista
#d4004   Atualizações da classe ClassifierEnginneringForest   Resolvendo problemas com indentação do código
#d4005   Atualizações da classe ClassifierEnginneringForest   Resolvendo problemas com __slots__
#d4006   Atualizações da classe ClassifierEnginneringForest   Implementado o método make_lote_base_estimator
#d4007   Atualizações da classe ClassifierEnginneringForest   Adicionado a chamado ao construtor da classe pai
#d4008   Atualizações gerais   Correção de identação no código
#d4009   Atualizações da classe BaseEnginnering   Padroniza os métodos para usarem o prefixo get_; Implementa o método get_param_value
#d4010   Atualizações da classe EnginneringForest   Resolvido problemas com indentação do código
#d4011   Atualizações da classe EnginneringForest   Adiciona o uso de __slots__
#d4012   Atualizações da classe EnginneringForest   Corrigido o método __init__
#d4013   Atualizações da classe EnginneringForest   Corrigido o método __del__
#d4014   Atualizações da classe BaseEnginnering   Criação do método get_pack_nparray
#d4015   Atualizações da classe EnginneringForest   Reescrito o método build
#d4016   Atualizações do projeto   Resolvido problemas com o merge do git
#d4017   Atualizações da classe EnginneringForest   Corrigido o método train
#d4018   Atualizações da classe EnginneringForest   Corrigido o método fit
#d4019   Atualizações gerais   Correção de código para execução
#d4020   Altera a classe BaseEnginnering   Adiciona o método get_df_split
#d5001   Altera a classe BaseEnginnering   Finaliza a primeira versão de get_df_split,ainda nao retorna o dataframe, mas retorna as posições a serem fatiadas
#d5002   Altera a classe BaseEnginnering   Remove os comentários desnecessários de get_df_split
#d5003   Altera a classe BaseEnginnering   Adiciona a propriedade predict_X
#d5004   Altera a classe BaseEnginnering   Altera o método get_df_split para ser um método gerador (generate) retornando a cada iteração uma tupla com o limite inferior e superior para cortar o dataframe
#d5005   Atualizações da classe EnginneringForest   Alterado o método predict, agora além de cortar o subconjunto de atributos, o treinamento é feito separando as instancias em pequenos conjuntos
#d5006   Atualizações da classe EnginneringForest   Adicionado mensagens de depuração no método train
#d5007   Atualizações da classe EnginneringForest   Adicionado mensagens de depuração no método predict
#d6001	Atualizações da classe BaseEnginnering	Implementdo o método get_block_fit para substituir o método get_df_split
#d6002	Atualizações da classe BaseEnginnering	Refatorado o método get_block_fit
#d6003	Atualizações da classe BaseEnginnering	Removido o método get_df_split
#d6004	Atualizações da classe EnginneringForest	Continuação da implementação do método predict
##### Previous Coding Deprecated
##### Next new coding indexing

#d300819001     Altera a classe BaseEnginnering     Adiciona o método get_size_estimator
#d300819002     Altera a classe EnginneringFOrest   Remove o código obsoleto
#d300819003     Altera o projeto                    Corrige eventuais erros no projeto para ser reconhecido como um pacote python
#d300819004     Altera a classe EnginneringForest   Altera o método predict para salve as matrizes de predição
#d300819005     Altera a classe EnginneringForest   Altera o método train para incluir o tamanho em Kbytes do classificador na memória
#d300819006     Altera a classe EnginneringForest   Marcação de código obsoleto 
#d300819007     Cria o arquivo spell_0x00000001     Script de pré-teste para executar o primeiro experimento
#d300819008     Altera a classe EnginneringForest   Correção de bugs
#d040919001     Altera a classe BaseEnginnering     Altera o método get_block_fit para o caso de quando o bloco cabe na área de memória estimada
#d040919002     Atualizações da classe ClassifierEnginneringForest     Removendo código de comentários
#d300819003     Altera a classe EnginneringForest   Remover as instruções del do método train e fit; Removido código de comentários; Removido atributos desnecessários; Adicionado o parâmetro de configuração para eliminar os dados de treinamento após o treino
#d300819004     Altera a classe EnginneringForest   Remover as instruções del do método train e fit; Removido código de comentários; Removido o reset dos indices do parâmetro X; Otimizado as mensagens de log; Alterado o uso de loc para iloc para separar o dataset X em um subset de tamanho definido por get_block_fit(); Removido código desnecessário
#d300819005     Altera a classe EnginneringForest   Alterado o método voting para corresponder as necessidadeis atuais
#d300819006     Altera a classe EnginneringForest   Alterado o método predict para manter logs dos dados de predição
#d070919001     Altera o projeto                    Adiciona a classe ConfigurationEnginnering e coloca nela todos os utilitários do projeto
#d090919001     Altera a classe LoggerEnginnering   Altera o método run e add para "silenciar" erro de alerta caso o ambiente de logging não esteja criado, assim não afetando as classes que usam LoggerEnginnering, mas não ativam o logging de imediato
#d090919002     Adiciona ConfigurationEnginnering   Adiciona a classe ConfigurationEnginnering responsável por conter todas as configurações do projeto que não estejam relacionados aos algoritmos de aprendizado de máquina
#d140919001     Altera a classe ConfigurationEnginnering   Correção de bugs
#d140919001     Altera o projeto                    Altera o código para funcionar com mais de uma classe alvo
#d190919001     Altera a classe ConfigurationEnginnering   Adequa a escrita do código para as orientações PEP
#d190919002     Altera a classe ConfigurationEnginnering   Adiciona o método run_encoder_data para que o usuário possa especificar qual codificador será usado nos dados (X)
#d190919003     Altera a classe ConfigurationEnginnering   Adiciona o método run_transformer que inicializa os codificadores default a serem usados nos dados (X,y), este método só faz sentido em ser usado caso o método run_encoder_data não tenha sido chamado anteriormente.
#d190919004     Altera a classe ConfigurationEnginnering   Adiciona o método run_scaler_data para que o usuário possa especificar qual classe de escala a ser usado nos dados (X)
#d190919005     Altera a classe ConfigurationEnginnering   Altera o método run_transformer para incluir a inicialização de uma classe para colcoar em escalar os dados (X)
#d190919006     Altera a classe ConfigurationEnginnering   Altera o método run_transformer renomeando-o para run_encoder; adiciona as novas propriedades em __slots__; corrige o método __del__
#d190919007     Altera a classe ConfigurationEnginnering   Inclui o atributo normalize_enable para que o pré-profecessamento com a transformação dos dados possa ser executada separadamente da normalização
#d190919008     Altera a classe BaseEnginnering   Adiciona a definição das funções get_transform, get_normalize e get_preprocessing
#d190919009     Altera a classe BaseEnginnering   Adequa a escrita do código para as orientações PEP
#d230919001     Altera a classe ConfigurationEnginnering   Adiciona novos atributos e alteram outros para que a classe fique mais simples de gerenciar o pré-processamento e para que a classe fique encarregada somente de manter os métodos para inicialização das instâncias para encoder e normalize dos dados.
#d230919002    Altera a classe BaseEnginnering   Altera o método get_transform que implementa o novo algoritmo para aplicar a codificação aos dados, codificando somente as colunas que são "consideradas" categóricas, e nomeando cada coluna gerada após a codificação com o nome do atributo seguido do valor codificado. Considera também o caso de apenas uma coluna ser gerada e nomeia a coluna com o nome antigo da coluna seguido do termo 'all'.
#d2409190016     Altera a classe ConfigurationEnginnering   Correção de bugs nos métodos run_encoder_data e run_encoder_target
#d240919002     Altera a classe ConfigurationEnginnering    Remove código desnecessário e retira da classe a responsabilidade das variáveis temporárias com os dados a serem condificados
#d240919003    Altera a classe BaseEnginnering   Altera o método get_transform para que as variáveis temporárias com os dados condificados sejam craidas dentro do próprio método. Isto foi feito para que ao criar a variável os indices dos dados de treinamento (x, y) possam ser preservados, mesmo após a codificação. Isto também foi alocado aqui, pois com o fluxo de trabalho esperado com o código final, só se conhece os dados de treinamento (X, y) no momento de treinar o modelo.
#d240919004    Altera a classe ConfigurationEnginnering    Adiciona o atributo encoder_flag para controlar quando os dados de X e y são codificados, este atributo funciona como um flag para informar se os dados (X, y) foram codificados, assim em caso de chamadas sucessivas não se tem um efeito de looping no código... caso o efeito de looping seja o desejado então o programador deve resetar este atributo explicitamente.
#d240919005    Altera a classe BaseEnginnering   Altera o métoddo get_transform para usar a flag definida em #d240919004 e evirar o problema levantado
#d240919006    Altera a classe ConfigurationEnginnering    Remove atributos não usados, reestrutura os atributos em __slots__, altera o método run_scaler_data para não ocorrer o problema relatado em #d240919004; adiciona comentários no código para faciliar o entendimento dos atributos
#d240919007    Altera a classe ConfigurationEnginnering    Adiciona o atributo encoder_categorical_columns para guardar o nome das colunas que foram codificadas
#d240919008    Altera a classe BaseEnginnering   Altera o métoddo get_normalize para colocar em escala somente as colunas que não foram codificadas; inclui o o uso do atributo encoder_categorical_columns no método get_transform para a medida que as classes forem codificadas o nome da coluna seja guardado
#d240919009    Altera a classe BaseEnginnering   Remove código de comentário
#d240919010    Altera a classe ConfigurationEnginnering    Implementa o método run_preprocessing
#d240919011    Altera a classe BaseEnginnering    Implementa o método get_preprocessing, adiciona parâmetros default aos métodos get_normalize e get_transform
#d260919001    Altera a classe BaseEnginnering    Correção de bugs no método get_preprocessing
#d260919002    Altera a classe ClassifierEnginneringForest    Adequa a escrita do código para as orientações PEP
#d260919003    Altera a classe LoggerEnginnering    Adequa a escrita do código para as orientações PEP
#d260919004    Altera a classe EnginneringForest    Adequa a escrita do código para as orientações PEP
#d260919005    Adiciona a classe ConstantsEnginnering    Esta classe contem as definições de valores que podem se usados como parâmetros no código
#d260919006    Altera a classe ConstantsEnginnering    Adiciona as constantes para as estratégias de treinamento com dados categóricos
#d091019001    Altera a classe BaseEnginnering    Altera o método get_transform para armazenar no dicionário encoder_feature usando tipos buitin do python para facilitar a troca com outros métodos
#d091019002    Altera a classe BaseEnginnering    Altera o método get_transform para usar a função all() nas estruturas de condições longas
#d091019003    Altera a classe EnginneringForest    Altera o método fit para lidar com dados categóricos de acordo com a estratégia de treino
#d101019001    Altera a classe BaseEnginnering    Adiciona o método get_in_list
#d101019002    Altera a classe EnginneringForest    Altera o método train para usar o método get_in_list, este método coloca em uma única lista as tuplas que são geradas após a codificação dos dados
#d121019001    Altera a classe EnginneringForest    Inicia as alterações no método predict para que ele possa lidar comos dados categóricos quando is_data_categorical for true.
#d121019002    Altera a classe BaseEnginnering    Adiciona os métodos get_transform_predict e get_normalize_predict para serem usados nos dados de X_test quando o is_data_categorical for true.
#d121019003    Altera a classe BaseEnginnering    Finalizado o método get_transform_predict, que funciona similar ao método get_transform, a diferença que aqui o método só se iniciar se as flags de dados categóricos estiverem setadas com True e que já exista uma instância dos codificadores controlada por encoder_flag[0] == 1, além disto este método não retreina os codificadores com o método fit e não altera os outros atributos que mantem informações dos dados codificados.
#d121019003    Altera a classe BaseEnginnering    Finalizado o método get_normalize_predict, que funciona similar ao método get_normalize, a diferença que aqui o método só se iniciar se as flags de dados normalizados estiverem setadas com True e que já exista uma instância dos normalizadores controlada por normalize_flag == 1, além disto este método não retreina os normalizadores com o método fit.
#d121019004    Altera a classe BaseEnginnering    Corrigido bugs nos métodos get_normalize_predict e get_transform_predict